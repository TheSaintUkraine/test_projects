{"version":3,"sources":["SecondGame.js","App.js","reportWebVitals.js","index.jsx"],"names":["Second_game","props","state","turns","min","max","question","response","restart_button","control_buttons","High","bind","Low","Win","Lose","Restart","axios","post","then","setState","data","e","preventDefault","this","answer","color","className","style","display","onClick","Component","App","number","Math","floor","random","userValue","status","history","Check","setUserValue","Start","prevState","value","target","to","path","placeholder","onChange","type","map","item","i","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67ef440a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nexport default class Second_game extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             turns:10,\r\n             min:0,\r\n             max:1000,\r\n             question:\"Is your number \",\r\n             response:null,\r\n             restart_button:\"none\",\r\n             control_buttons:\"block\"\r\n        }\r\n        this.High = this.High.bind(this);\r\n        this.Low = this.Low.bind(this);\r\n        this.Win = this.Win.bind(this);\r\n        this.Lose = this.Lose.bind(this);\r\n        this.Restart = this.Restart.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        axios.post(\"http://localhost:5000/getQuestion\").then((response)=>{\r\n            this.setState({\r\n                question:\"Is your number \" + response.data + \"?\"\r\n            })\r\n        })\r\n    }\r\n    High(e) {\r\n        e.preventDefault();\r\n        if(this.state.turns > 1) {\r\n            axios.post(\"/getQuestion\",{answer:\"up\"}).then((response)=>{\r\n                this.setState({                    \r\n                    question:\"Is your number \"+ response.data  + \"?\",\r\n                    turns:this.state.turns-1\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            this.Lose();\r\n        }\r\n    }\r\n    Low(e) {\r\n        e.preventDefault();\r\n\r\n        if(this.state.turns > 1) {\r\n            axios.post(\"/getQuestion\",{answer:\"up\"}).then((response)=>{\r\n                this.setState({                    \r\n                    question:\"Is your number \" + response.data + \"?\",\r\n                    turns:this.state.turns-1\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            this.Lose();\r\n        }\r\n    }\r\n    Lose() {\r\n        this.setState({\r\n            question:\"Computer lose\",\r\n            color:\"red\",\r\n            restart_button:\"block\",\r\n            control_buttons:\"none\"\r\n        })\r\n    }\r\n    Win(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            question:\"Computer win\",\r\n            color:\"green\",\r\n            restart_button:\"block\",\r\n            control_buttons:\"none\"\r\n        })\r\n    }\r\n    Restart(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            color:\"black\",\r\n            restart_button:\"none\",\r\n            control_buttons:\"block\",\r\n            turns:10,\r\n            min:0,\r\n            max:1000\r\n        })\r\n        axios.post(\"/getQuestion\").then((response)=>{\r\n            this.setState({                    \r\n                question:\"Is your number \"+response.data + \"?\",\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <p>0 - 1000</p>\r\n                <p>Turns: {this.state.turns}</p>\r\n                <p style={{color:this.state.color}}>{this.state.question}</p>\r\n\r\n                <form>\r\n                    <button style={{display:this.state.control_buttons}} onClick={this.High}>Up</button>\r\n                    <button style={{display:this.state.control_buttons}}onClick={this.Win}>Yes</button>\r\n                    <button style={{display:this.state.restart_button}} onClick={this.Restart}>Restart</button>\r\n                    <button style={{display:this.state.control_buttons}}onClick={this.Low}>Down</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\n\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link ,Switch} from 'react-router-dom';\nimport SecondGame from './SecondGame';\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       max:1000,\n       number:Math.floor(Math.random() * (this.max - 1) + 1),\n       userValue:\"\",\n       turns:10,\n       status:\"Type something\",\n       display:\"none\",\n       history:[]\n    }\n    this.Check = this.Check.bind(this);\n    this.setUserValue = this.setUserValue.bind(this);\n    this.Start = this.Start.bind(this);\n  }\n  Start(e) {\n    e.preventDefault();\n    this.setState({\n      number: Math.floor(Math.random() * (this.state.max - 1) + 1),\n      turns:10,\n      userValue:\"\",\n      status:\"Type something\",\n      display:\"none\",\n      history:[]\n    })\n\n  }\n  Check(e) {\n    e.preventDefault();\n    this.setState({turns:this.state.turns-1});\n    if (this.state.turns > 1) {\n      if(this.state.userValue > this.state.number) {\n        this.setState(prevState =>({\n          status:\"Too high\",\n          history:[...prevState.history,{value:this.state.userValue,status:\"Too high\"}]\n        }));\n      }\n      else if (this.state.userValue < this.state.number) {\n        this.setState(prevState =>({\n          status:\"Too low\",\n          history:[...prevState.history,{value:this.state.userValue,status:\"Too low\"}]\n        }));\n      }\n      else {\n        this.setState( prevState => ({\n          status:\"You win\",\n          display:\"none\",\n          history:[...prevState.history,{value:this.state.userValue,status:\"Win\",color:\"green\"}]\n        }));\n      }\n      \n    }\n    else {\n      this.setState(prevState=>({\n        status:\"You lose\",\n        display:\"none\",\n        history:[...prevState.history,{value:this.state.userValue,status:\"Lose\",color:\"red\"}]\n      }));\n    }\n  }\n\n  setUserValue(e) {\n    this.setState({\n      userValue: e.target.value,\n      display:\"block\"\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Router>\n          <div className=\"nav\">\n            <Link className=\"link\" to=\"/\">First game</Link>\n            <Link className=\"link\" to=\"/second_game\">Second game</Link>\n          </div>\n          <Switch>\n            \n            <Route path=\"/second_game\"> \n              <SecondGame/>\n            </Route>\n\n            <Route path=\"/\">\n            <div className=\"App\">\n              <p>Turns: {this.state.turns}</p>\n              <p>{this.state.status}</p>\n              <form>\n              <input value={this.state.userValue} placeholder=\"Number\" onChange={this.setUserValue} min=\"0\" max={this.state.max}  type=\"number\"></input>\n              <button style={{display:this.state.display}} onClick={this.Check}>Check</button>\n              <button onClick={this.Start}>Restart</button>\n              </form>\n                <ul>\n                  {this.state.history.map((item,i) =>       \n                    <li style={{color:item.color}} key={i.toString()}> {item.value} - {item.status}</li>\n                  )}\n                </ul>\n            </div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}